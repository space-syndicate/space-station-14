using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Configuration;
using Robust.Shared.IoC;
using Content.Shared.Corvax.CCCVars;
using Content.Shared.CCVar;

namespace Content.Client.Corvax.Donate;

[GenerateTypedNameReferences]
public sealed partial class DonateWindow : PanelContainer
{
    [Dependency] private readonly IConfigurationManager _cfg = default!;

    public DonateWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        var uri = IoCManager.Resolve<IUriOpener>();

        var siteLink = _cfg.GetCVar(CCCVars.LobbyDonateSiteLink);
        if (!string.IsNullOrWhiteSpace(siteLink))
            SiteButton.OnPressed += _ => uri.OpenUri(siteLink);
        else
            SiteButton.Visible = false;

        var boostyLink = _cfg.GetCVar(CCVars.InfoLinksPatreon);
        if (!string.IsNullOrWhiteSpace(boostyLink))
            BoostyButton.OnPressed += _ => uri.OpenUri(boostyLink);
        else
            BoostyButton.Visible = false;

        var discussLink = _cfg.GetCVar(CCCVars.LobbyDiscussLink);
        if (!string.IsNullOrWhiteSpace(discussLink))
        {
            DiscussionSeparator.Visible = true;
            DiscussionContainer.Visible = true;
            // Set custom button name from CVar if provided; fallback to localized text.
            var discussName = _cfg.GetCVar(CCCVars.LobbyDiscussName);
            if (!string.IsNullOrWhiteSpace(discussName))
                DiscussButton.Text = discussName;
            DiscussButton.OnPressed += _ => uri.OpenUri(discussLink);
        }
    }
}
