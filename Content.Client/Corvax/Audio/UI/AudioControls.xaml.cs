using Content.Client.UserInterface.Controls;
using Content.Shared.Corvax.Audio;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client.Corvax.Audio.UI;

[GenerateTypedNameReferences]
public sealed partial class AudioControls : FancyWindow
{
    private EntityUid _entity;

    public Action<float>? OnVolumeChanged;
    public Action<int>? OnRangeChanged;
    public Action<float>? OnPitchChanged;

    public AudioControls()
    {
        RobustXamlLoader.Load(this);
        VolumeSlider.OnReleased += slider => OnVolumeChanged?.Invoke(slider.Value);
        RangeSlider.OnReleased += slider => OnRangeChanged?.Invoke(float.ConvertToInteger<int>(slider.Value));
        PitchSlider.OnReleased += slider => OnPitchChanged?.Invoke(slider.Value);

        VolumeSlider.OnValueChanged += range => VolumeLabel.Text = $"{Loc.GetString("audio-controls-ui-label-volume")}: {range.Value.ToString("F1")}%";
        RangeSlider.OnValueChanged += range => RangeLabel.Text = $"{Loc.GetString("audio-controls-ui-label-range")}: {range.Value.ToString("F0")}";
        PitchSlider.OnValueChanged += range => PitchLabel.Text = $"{Loc.GetString("audio-controls-ui-label-pitch")}: {range.Value.ToString("F1")}";
    }

    public void SetEntity(EntityUid entity)
    {
        _entity = entity;
    }

    public void Update(AudioControlsEuiState state)
    {
        VolumeSlider.Value = state.Volume;
        PitchSlider.Value = state.Pitch;
        RangeSlider.Value = state.Range;
    }
}

